{"version":3,"sources":["components/ContactList/ContactList.module.css","App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/app/contact-selector.js","redux/app/contact-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/app/contact-reducer.js","redux/app/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","s","container","defaultProps","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","form","onSubmit","e","preventDefault","nameList","reduce","acc","contact","numberList","alert","contactCheck","contactActions","label","type","placeholder","input","value","onChange","currentTarget","pattern","title","required","button__wrapper","button","Filter","actions","target","ContactList","list","map","item","href","onClick","onDeleteContact","App","allContacts","length","createReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8767079e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__38UDm\",\"item\":\"ContactList_item__2HnaJ\",\"name\":\"ContactList_name__2sYKY\",\"number\":\"ContactList_number__24Skf\",\"button\":\"ContactList_button__2B7OH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2jdK_\",\"close\":\"App_close__2zwLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3tUUy\",\"input\":\"Filter_input__2MC0z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1rGjx\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nContainer.defaultProps = {\r\n  children: [],\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\n\r\nexport const addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contact/delete\");\r\nexport const changeFilter = createAction(\"contact/changeFilter\");\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/app/contact-selector\";\r\nimport * as contactActions from \"../../redux/app/contact-actions\";\r\n\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (name, number) =>\r\n    dispatch(contactActions.addContact(name, number));\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const contactCheck = () => {\r\n    const nameList = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      []\r\n    );\r\n    const numberList = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      []\r\n    );\r\n    if (nameList.includes(name) ?? numberList.includes(numberList)) {\r\n      alert(`$(name)$(number) alsoy yet in contacts`);\r\n    }\r\n    if (name === \"\" ?? number === \"\") {\r\n      alert(\"Put something \");\r\n    }\r\n  };\r\n\r\n  // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    if (contactCheck()) {\r\n      return;\r\n    }\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Contact name\"\r\n          aria-label=\"input to you name\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={(e) => setName(e.currentTarget.value)}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Phone number\"\r\n          aria-label=\"input to you phone number\"\r\n          className={s.input}\r\n          value={number}\r\n          onChange={(e) => setNumber(e.currentTarget.value)}\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <div className={s.button__wrapper}>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/app/contact-selector\";\r\nimport * as actions from \"../../redux/app/contact-actions\";\r\n\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  const onChange = (e) => dispatch(actions.changeFilter(e.target.value));\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Find?\"\r\n        className={s.input}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as actions from \"../../redux/app/contact-actions\";\r\nimport { getVisibleContacts } from \"../../redux/app/contact-selector\";\r\n\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map((id, name, number) => (\r\n        <li className={s.item} key={id}>\r\n          <span className={s.name}>{name}: </span>\r\n          <a href={`tel:${number}`} className={s.number}>\r\n            {number}\r\n          </a>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.button}\r\n          ></button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","// import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport Container from \"./components/Container\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport { getVisibleContacts } from \"./redux/app/contact-selector\";\r\nimport { useSelector } from \"react-redux\";\r\nimport s from \"./App.module.css\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const allContacts = contacts.length;\r\n  return (\r\n    <Container>\r\n      <h1 className={s.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={s.title}>Contacts</h2>\r\n      <p>Всего:{allContacts}</p>\r\n      <Filter />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   contacts: state.app.contacts,\r\n//   filter: state.app.filter,\r\n// });\r\n// const mapDispatchToProrps = (dispatch) => ({\r\n//   formSubmitHandler: (contactData) =>\r\n//     dispatch(appActions.addContact(contactData)),\r\n//   contactDelete: (contactId) => dispatch(appActions.deleteContact(contactId)),\r\n//   filterSet: (str) => dispatch(appActions.filterSet(str)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProrps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./contact-actions\";\r\n\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initialContacts, {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from \"./contact-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/app/store.js\";\r\n\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport \"./App.module.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1wY1h\",\"label\":\"ContactForm_label__18A1F\",\"input\":\"ContactForm_input__QG_xg\",\"button__wrapper\":\"ContactForm_button__wrapper__1zD2J\",\"button\":\"ContactForm_button__2RjG6\"};"],"sourceRoot":""}